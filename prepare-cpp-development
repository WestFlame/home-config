#!/bin/sh

prepare_boost () {
    cd ~/sources

    sudo aptitude install libbz2-dev zlib1g-dev libicu-dev python3-dev

    wget http://sourceforge.net/projects/boost/files/boost/1.58.0/boost_1_58_0.tar.bz2
    tar xjf boost_1_58_0.tar.bz2

    cd boost_1_58_0
    ./bootstrap.sh
    sed -i 's/^using python : .\.. : \/usr ;/using python : 3.4 : \/usr ;/' project-config.jam
    ./b2 install --prefix=$HOME/local
}

prepare_opencv () {
    cd ~/sources

    sudo aptitude install libeigen3-dev

    wget http://sourceforge.net/projects/opencvlibrary/files/opencv-unix/2.4.11/opencv-2.4.11.zip
    unzip opencv-2.4.11.zip

    cd opencv-2.4.11
    mkdir build-Release; cd build-Release
    cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$HOME/local -DBUILD_DOCS=OFF -DBUILD_PERF_TESTS=OFF -DBUILD_TESTS=OFF
    make
    make install
}

prepare_arma () {
    cd ~/sources

    sudo aptitude install libopenblas-dev liblapack-dev libarpack2-dev

    wget http://sourceforge.net/projects/arma/files/armadillo-5.000.1.tar.gz
    tar xzf armadillo-5.000.1.tar.gz

    cd armadillo-5.000.1
    mkdir build-Release; cd build-Release
    cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$HOME/local
    make
    make install
}

prepare_clion () {
    cd ~/programs
    wget http://download.jetbrains.com/cpp/clion-1.0.tar.gz
    tar xzf clion-1.0.tar.gz
    mv clion-1.0 clion
}


#echo "Should I prepare CLion?"
#select yn in "Yes" "No"; do
#    case $yn in
#        Yes ) prepare_clion; break;;
#        No ) exit;;
#    esac
#done

while true; do
    read -p "Should I prepare CLion? [yn]: " yn
    case $yn in
        [Yy]* ) prepare_clion; break;;
        [Nn]* ) break;;
        * ) echo "Please answer yes or no.";;
    esac
done

prepare_boost
prepare_opencv
prepare_arma
